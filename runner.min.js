function getSommaireLink(e) {
    return is_prod ? is_demo ? extrait_url + "?" : 0 === e ? url_histoire + "?" : url_histoire + "?c=" + (e + 1) : is_demo ? "extrait.html?" : 0 === e ? "index.html?" : "chapitre" + (e + 1) + ".html?"
}

function sendEvent(e, n) {
    if (document.createEventObject) obj_caller.target.fireEvent(e, {
        detail: n
    });
    else {
        var t = document.createEvent("CustomEvent");
        t.initCustomEvent(e, !1, !1, n), window.dispatchEvent(t)
    }
}

function removeNode(e) {
    var n, t;
    if ("string" == typeof e ? "#" === e[0] ? n = document.getElementById(e.substring(1)) : "." === e[0] && (n = document.querySelector(e)) : n = e, n) {
        t = n.parentNode;
        var s = document.createRange();
        s.selectNodeContents(n), s.deleteContents(), t.removeChild(n)
    }
}

function resize(e, n, t) {
    var s = verge.viewportW(),
        o = verge.viewportH(),
        a = 1;
    if (s >= n && (o >= t && (a = 1), o < t && (a = o / t)), s < n && (o >= t && (a = s / n), o < t)) {
        var c = s / n,
            u = o / t;
        a = Math.min(c, u)
    }
    e.style[Modernizr.prefixed("transform")] = "scale(" + a + ") translate(-50%,-50%)"
}

function loadOtherScenesById(ids, percent, callback) {
    function waitSceneIsLoaded(to_load) {
        if (other_scenes[to_load]) {
            other_scenes[to_load].load("." + fakeroot, function() {
                console.log("OTHER SCENE " + to_load + " IS LOADED");
                _.delay(function() {
                    waitSceneIsLoaded(to_load + 1);
                }, 10);
                if (to_load === index_to_stop) {
                    callback("end");
                }
            });
        } else {
            console.log("ALL OTHER SCENES ARE LOADED");
            if (document.querySelector("." + fakeroot)) {
                document.querySelector("." + fakeroot).parentNode.removeChild(document.querySelector("." + fakeroot));
            }
        }
    }
    var other_scenes = _.filter(scenes, function(o) {
        if (o !== undefined) {
            if (o.loaded !== true)
                return _.find(ids, function(i) { return i === o.index })
            else {
                return false;
            }

        } else {
            return false;
        }
    });
    var fakeroot = "fakeroot";
    var index_to_stop = Math.ceil(other_scenes.length * percent / 100);

    if (other_scenes.length > 0) {
        callback("start");
        var newdiv = document.createElement("div");
        newdiv.classList.add(fakeroot);
        newdiv.style.display = "none";
        document.querySelector("body").appendChild(newdiv);
        SoundPool.limitToScenes(other_scenes);
        SoundPool.load(function() {}, function() {
            _.delay(function() {
                waitSceneIsLoaded(0);
            }, 10);
        })
    } else {
        callback("start");
        callback("end");
    }
}

function preload(e, n, t) {
    var prescenes = [];
    var otherscenes = [];

    if (getStartPage() > 0) {
        initial_load = [getStartPage()];
    }

    _.each(initial_load, function(i) {
        prescenes.push(scenes[i]);
    });
    _.each(scenes, function(s, i) {
        if (_.indexOf(initial_load, i) === -1 && s !== undefined) {
            otherscenes.push(s);
        }
    });

    document.querySelector(".buttons").style.display = "none";
    var o = 0,
        a = 100,
        c = !1,
        i = 0,
        l = 0,
        t = t || 0;
    SoundPool.limitToScenes(prescenes);
    var u = SoundPool.card(),
        r = u;
    _.each(prescenes, function(ee, n) {
        if (n >= t) {
            r += ee.images.length;
        }
    });
    SoundPool.load(function() {
        l += 1;
        var t = Math.min(100, Math.ceil(100 * (o + l) / r));
        document.querySelector(".preloader").innerHTML = t + "%", sendEvent("loader", {
            max: r,
            current: o + l,
            percent: t
        }), !c && t >= a && (c = !0, e.classList.add("hide"), sendEvent("loader", {
            max: r,
            current: o + l,
            percent: t
        }) /*, n()*/ )
    }, function() {
        var fakeroot = "fakeroot";
        var card_scenes_parsed = 0;

        function waitSceneIsLoaded(to_load, max_to_load) {
            if (prescenes && prescenes[to_load] && to_load <= max_to_load) {
                prescenes[to_load].load("." + fakeroot, function() {
                    l += prescenes[to_load].images.length;
                    t = Math.min(100, Math.ceil(100 * (o + l) / r));
                    document.querySelector(".preloader").innerHTML = t + "%", sendEvent("loader", {
                        max: r,
                        current: o + l,
                        percent: t
                    });
                    _.delay(function() {
                        card_scenes_parsed += 1;
                        waitSceneIsLoaded(to_load + 1, max_to_load);
                    }, 100);
                });
            } else {
                if (document.querySelector("." + fakeroot)) {
                    document.querySelector(".buttons").style.display = "block";
                    TweenMax.to(".preloader", 1, { autoAlpha: 0 });
                    n();
                }
            }
        }

        var newdiv = document.createElement("div");
        newdiv.classList.add(fakeroot);
        newdiv.style.display = "none";
        document.querySelector("body").appendChild(newdiv);

        _.delay(function() {
            waitSceneIsLoaded(t || 0, initial_load.length);
        }, 250);
    })
}

function run(e) {
    function n(e) {
        function hide(elt) {
            document.querySelector("." + elt).style.visibility = "hidden"
        }

        function p() {
            withsound ? (document.querySelector(".mute").style.display = "block", document.querySelector(".unmute").style.display = "none") : (document.querySelector(".mute").style.display = "none", document.querySelector(".unmute").style.display = "block")
        }
        if (TweenMax.killAll(!0), SoundPool.stopDialogue(), hide("next"), hide("previous"), hide("drawer_open"), SoundPool.stopSounds(), SoundPool.stopSounds(current_scene), old_scene = current_scene, current_scene = e(current_scene), current_scene !== old_scene) {
            var newdiv = document.createElement("div");
            newdiv.classList.add("screen");
            newdiv.setAttribute("id", "screen" + current_scene);
            document.getElementById("canvas").appendChild(newdiv);
            old_scene >= 0 && document.getElementById("screen" + old_scene) && (removeNode("#screen" + old_scene), scenes[old_scene].el = null);
            scenes[current_scene].load("#screen" + current_scene, function() {
                scenes[current_scene].display(function() {
                    scenes[current_scene].beforerun(current_scene);
                    scenes[current_scene].run();
                    p();
                    mydebug && 1 === mydebug && (TweenMax.pauseAll(), SoundPool.stopSounds(current_scene), _.delay(function() {
                        SoundPool.stopDialogue(), SoundPool.pauseMusic()
                    }, 100))
                })
            })
        }
    }

    // function t(e) {
    //     return 99 === e && (e = end_scene + 1);
    //     if(e <= start_scene && prev_chapitre >= 0){
    //         if(prev_chapitre <= 1){
    //             documentlocation(is_demo ? extrait_url + "?r=1" : url_histoire + "?r=1")
    //         } else {
    //             documentlocation(is_demo ? extrait_url + "?r=1" : url_histoire + "?c=" + prev_chapitre + "&r=1")
    //         }
    //         !is_demo && e === end_scene && next_chapitre <= 1 ? void(documentlocation(is_demo ? extrait_url : url_histoire)) : (e > start_scene && (e -= 1), e)
    // }

    function s(e) {
        return e > end_scene - 1 && next_chapitre > 0 ? void(is_prod ? documentlocation(url_histoire + "?c=" + next_chapitre) : documentlocation("chapitre" + next_chapitre + ".html")) : is_demo && e > end_scene - 1 ? 99 : (e <= end_scene - 1 && (e += 1), e)
    }

    function isTwoScreen() {
        return is_two_screens
    }

    function a() {
        return 1 == d
    }

    function c() {
        d = !1
    }

    function u() {
        d = !0
    }

    function i(e) {
        current_scene > 0 ? (TweenMax.set(".background.first", {
            position: "absolute",
            left: 0,
            opacity: 1
        }), TweenMax.set(".background.second", {
            left: 1e3,
            opacity: 1
        }), TweenMax.to(".background.second", .5, {
            left: "-=1000",
            opacity: 1
        }), TweenMax.to(".background.first", 1, {
            left: "-=1024",
            opacity: 1,
            onComplete: e
        })) : (TweenMax.set(".background.second", {
            left: 0,
            opacity: 1
        }), TweenMax.set(".background.first", {
            position: "absolute",
            left: -1024,
            opacity: 0
        }), e())
    }

    function r(e) {
        var n = document.querySelector(".background");
        n.style.position = "absolute", n.style.top = "0", n.style.left = "0", n.style.opacity = "1", TweenMax.killChildTweensOf(".background.first"), TweenMax.set(".sprite", {
            opacity: 0
        }), scenes[current_scene].hidefirst(), i(e)
    }

    function l(e) {
        document.querySelector("." + e).style.visibility = "hidden"
    }

    function p() {
        withsound ? (document.querySelector(".mute").style.display = "block", document.querySelector(".unmute").style.display = "none") : (document.querySelector(".mute").style.display = "none", document.querySelector(".unmute").style.display = "block")
    }

    function m() {
        if (!no_sommaire) {
            var e = "",
                n = "";
            _.forEach(quick_access.users, function(t) {
                e += n + t.work + " : " + t.name, n = "<br>"
            }), document.querySelector(".drawer blockquote").innerHTML = e, document.querySelector(".drawer h3 strong").innerHTML = quick_access.title;
            var t = "";
            // _.forEach(quick_access.chapitres, function(e, n) {
            //     for (var s = n, o = 0; o <= e.end - e.start; o++) {
            //         var a = e.start + o;
            //         t += '<li><a href="' + getSommaireLink(s) + "&p=" + o + '"><img src="' + baseurl + "ecrans/" + (a < 10 ? "0" + a : a) + '/masque.jpg"></a></li>'
            //     }
            // }), is_demo && (t += '<li><a href="' + extrait_url + '?p=99"><img src="' + baseurl + 'ecrans/99/masque.jpg"></a></li>'), document.querySelector(".drawer ul").innerHTML = t
        }
    }

    withsound = SoundPool.getSoundStatus(), withmusic = SoundPool.getMusicStatus();
    var d = !0;
    document.querySelector(".buttons .previous").addEventListener("click", function(e) {
        return e.preventDefault(), n(t), p(), !1
    });
    document.querySelector(".buttons .next").addEventListener("click", function(e) {
        return isTwoScreen() && a() ? (e.preventDefault(), r(function() {
            c(), scenes[current_scene].runsecond()
        })) : (e.preventDefault(), n(s), isTwoScreen() && u(), p()), !1
    });
    document.querySelector(".muteactions .mute").addEventListener("click", function(e) {
        return e.preventDefault(), SoundPool.disableSound(), p(), SoundPool.pauseDialogue(), SoundPool.pauseSounds(scenes[current_scene]), !1
    });
    document.querySelector(".muteactions .unmute").addEventListener("click", function(e) {
        return e.preventDefault(), SoundPool.allowSound(), p(), SoundPool.playDialogue("d" + current_scene), SoundPool.playSounds(scenes[current_scene]), !1
    });

    if (!no_sommaire) {
        document.querySelector(".drawer_open").addEventListener("click", function(e) {
            return e.preventDefault(), document.querySelector(".drawer").classList.add("on"), document.querySelector(".drawer").classList.remove("off"), !1
        });
        document.querySelector(".drawer_close").addEventListener("click", function(e) {
            return e.preventDefault(), document.querySelector(".drawer").classList.remove("on"), document.querySelector(".drawer").classList.add("off"), !1
        });
    } else if (document.querySelector(".drawer")) {
        document.querySelector(".drawer").parentNode.removeChild(document.querySelector(".drawer"));
        document.querySelector(".drawer_open").style.visibility = "hidden";
    }

    var f = new Hammer(document.getElementById("canvas"));
    f.get("pan").set({
        enable: !1
    }), f.get("pinch").set({
        enable: !1
    }), f.get("tap").set({
        enable: !1
    }), f.get("doubletap").set({
        enable: !1
    }), f.get("press").set({
        enable: !1
    }), f.get("rotate").set({
        enable: !1
    });
    var y = start_scene;
    document.location.search.match(/p=([0-9]+)/) ? y = parseInt(document.location.search.match(/p=([0-9]+)/)[1]) : document.location.search.match(/r=1/) && (y = end_scene), current_scene = e ? y - 1 : -1, n(function() {
        return current_scene + 1
    }), m()
}

function getStartPage() {
    if (document.location.search.match(/p=([0-9]+)/)) {
        return parseInt(document.location.search.match(/p=([0-9]+)/)[1]);
    } else {
        return 0;
    }
}

function enableNav(e) {
    function n(e) {
        document.querySelector("." + e).style.visibility = "hidden"
    }

    function t(e) {
        _.delay(function() {
            document.querySelector("." + e).style.visibility = "visible"
        }, between_screen_waiting_time)
    }

    scenes.length > 0 && t("next"), e > 0 && t("previous"), 0 === e && 0 === prev_chapitre && n("previous"), e === scenes.length - 1 && 0 === next_chapitre && _.delay(function() {
        n("next")
    }, between_screen_waiting_time + 10), document.querySelector(".muteactions").style.display = "block";

    if (!no_sommaire) {
        document.querySelector(".drawer").classList.remove("on"), document.querySelector(".drawer").classList.remove("on"), document.querySelector(".drawer").classList.add("off"), t("drawer_open");
    }
}

function goingBack() {
    return document.location.search.match(/r=1/)
}

function forMobiles() {
    window.removeEventListener("touchstart", forMobiles);
    window.removeEventListener("click", forMobiles);
    document.querySelector(".preloader").innerHTML = "Chargement...";
    var e = new Howl({
        src: [baseurl + "ui/silence.m4a"],
        autoplay: !1,
        loop: !1,
        volume: 0,
        onload: function() {},
        onend: function() {}
    });
    e.unload();
    _.delay(function() {
        preload(document.querySelector(".preloader"), function() {
            document.querySelector(".preloaderimage").style.opacity = "0";
            document.querySelector(".preloaderimage").style.display = "none";
            run(first_scene)
        })
    }, 1000);
}

function isMobile() {
    return testExp = new RegExp("Safari|Android|webOS|iPhone|iPad|BlackBerry|Windows Phone|Opera Mini|IEMobile|Mobile", "i"), testExp.test(navigator.userAgent)
}

var first_scene = !0,
    old_scene = start_scene,
    cnt = 0,
    isFirefox = navigator.userAgent.toLowerCase().indexOf("firefox") > -1;

window.addEventListener("touchmove", function(e) {
    e.preventDefault()
});

document.addEventListener("DOMContentLoaded", function() {
    if (mydebug === 1) {
        var p = document.createElement("p");
        p.classList.add("slidenum");
        document.querySelector("body").append(p);
        document.querySelector("body").classList.add("debug");
    }
    Howler.mobileAutoEnable = !0, Howler.autoSuspend = !0, Howler.noAudio && (SoundPool.disableSound(), SoundPool.disableMusic(), Howler.mobileAutoEnable = !1, Howler.autoSuspend = !1);
    var e = document.querySelector(".wrapper");
    resize(e, 1024, 620);
    e.addEventListener("resize", function() {
        resize(e, 1024, 620)
    }), e.addEventListener("orientationchange", function() {
        resize(e, 1024, 620)
    })
});

window.addEventListener("loader", function(e) {
    e.detail.current > 0 && e.detail.current < e.detail.max && (document.querySelector(".preloaderimage").style.opacity = "1"), e.detail.current >= e.detail.max && (document.querySelector(".preloaderimage").style.opacity = "0", document.querySelector(".preloaderimage").style.display = "none")
});

goingBack();

!document.location.pathname.match(/index\.html/) || document.location.search.match(/p=([0-9]+)/) ? isMobile() ? (window.addEventListener("touchstart", forMobiles), window.addEventListener("click", forMobiles)) : forMobiles() : isMobile() ? (window.addEventListener("touchstart", forMobiles), window.addEventListener("click", forMobiles)) : forMobiles(), window.addEventListener("beforeinstallprompt", function(e) {
    e.userChoice.then(function(e) {
        console.log(e.outcome), "dismissed" == e.outcome ? console.log("User cancelled home screen install") : console.log("User added to home screen")
    })
});

current_next_scene = 0;

function documentlocation(url) {

    function url_to_next_screen_num(url) {
        var num = /nxt=([0-9]+)/.test(url) ? parseInt(url.match(/nxt=([0-9]+)/)[1]) : -1;
        return num;
    }

    function url_to_screen_num(url) {
        var num = /\?p=([0-9]+)/.test(url) ? parseInt(url.match(/\?p=([0-9]+)/)[1]) : -1;
        return num;
    }

    function is_loaded(num) {
        return true;
    }

    function wait_until_loaded(num, callback) {
        if (!is_loaded(screen_num)) {
            setTimeout(function() {
                wait_until_loaded(num, callback);
            }, 250);
        } else {
            callback();
        }
    }

    function change_screen_to(num) {
        function n(e) {

            function hide(elt) {
                document.querySelector("." + elt).style.visibility = "hidden"
            }

            function p() {
                withsound ? (document.querySelector(".mute").style.display = "block", document.querySelector(".unmute").style.display = "none") : (document.querySelector(".mute").style.display = "none", document.querySelector(".unmute").style.display = "block")
            }

            if (TweenMax.killAll(!0), SoundPool.stopDialogue(), hide("next"), hide("previous"), hide("drawer_open"), SoundPool.stopSounds(), SoundPool.stopSounds(current_scene), old_scene = current_scene, current_scene = e, current_scene !== old_scene) {
                var newdiv = document.createElement("div");
                newdiv.classList.add("screen");
                newdiv.setAttribute("id", "screen" + current_scene);
                document.getElementById("canvas").appendChild(newdiv);
                old_scene >= 0 && document.getElementById("screen" + old_scene) && (removeNode("#screen" + old_scene), scenes[old_scene].el = null);
                scenes[current_scene].load("#screen" + current_scene, function() {
                    scenes[current_scene].display(function() {
                        scenes[current_scene].beforerun(current_scene);
                        scenes[current_scene].run();
                        p();
                        mydebug && 1 === mydebug && (TweenMax.pauseAll(), SoundPool.stopSounds(current_scene), _.delay(function() {
                            SoundPool.stopDialogue(), SoundPool.pauseMusic()
                        }, 100))
                    })
                })
            }
        }
        n(num);
    }

    var screen_num = url_to_screen_num(url);
    current_next_scene = url_to_next_screen_num(url);

    wait_until_loaded(screen_num, function() {
        change_screen_to(screen_num);
    });
}